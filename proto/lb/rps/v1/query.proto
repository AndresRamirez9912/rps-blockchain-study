syntax = "proto3";
package lb.rps.v1;

option go_package = "github.com/0xlb/rps-chain/x/rps/types"; // store the generated files here

import "google/api/annotations.proto"; 
import "cosmos/query/v1/query.proto";
import "lb/rps/v1/rps.prot";

service Query {
 rpc GetGame(QueryGetGameRequest) returns (QueryGetGameResponse);
 option (cosmos.query.v1.module_query_safe) = true; // Enable REST API for this RPC
 option (google.api.http).get = "/rps/v1/game{index}"; // Endpoint and Method for the REST API 
 
 rpc GetParams(QueryGetParams) returns (QueryGetParamsResponse);
 option (cosmos.query.v1.module_query_safe) = true; // Enable REST API for this RPC
 option (google.api.http).get = "/rps/v1/params"; // Endpoint and Method for the REST API
  
}

message QueryGetGameRequest {
    uint64 index =1;   
}

message QueryGetGameResponse {
    Game game =1;
}

message QueryGetParams{}

message QueryGetParamsResponse{
    Params param =1;
}
