syntax = "proto3";
package lb.rps.v1;

option go_package = "challenge/x/rps/types"; // store the generated files here

import "google/api/annotations.proto";
import "cosmos/query/v1/query.proto";
import "lb/rps/v1/types.proto";

// Query service defines the gRPC service for querying game-related information
// and configuration parameters in the Rock, Paper & Scissors module.
service Query {
  // GetGame retrieves the details of a specific game based on the given index.
  rpc GetGame(QueryGetGameRequest) returns (QueryGetGameResponse) {
    option (cosmos.query.v1.module_query_safe) =
        true; // Habilita la API REST para este método
    option (google.api.http).get =
        "/rps/v1/game/{index}"; // Define el endpoint y el método REST
  }
}

// QueryGetGameRequest is the request type for the GetGame RPC, containing the
// game index.
message QueryGetGameRequest {
  uint64 index = 1; // The unique identifier of the game to retrieve.
}

// QueryGetGameResponse is the response type for the GetGame RPC, containing the
// game details.
message QueryGetGameResponse {
  Game game = 1; // The game details retrieved from the query.
}
